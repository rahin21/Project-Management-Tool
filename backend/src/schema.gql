# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateProjectInput {
  description: String
  name: String!
}

input CreateTaskDto {
  assignedToId: String
  dependsOnIds: [String!]
  description: String!
  due_date: String
  priority: String!
  projectId: String!
  status: String!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createProject(input: CreateProjectInput!): Project!
  createTask(input: CreateTaskDto!): Task!
  deleteProject(id: Int!): Boolean!
  deleteTask(id: Int!): Boolean!
  markAllNotificationsAsRead: [Notification!]!
  markNotificationAsRead(id: String!): Notification
  updateProject(id: Int!, input: UpdateProjectInput!): Project!
  updateTask(id: Int!, input: UpdateTaskDto!): Task!
}

type Notification {
  created_at: DateTime!
  id: ID!
  message: String!
  read: Boolean!
  user: User!
}

type Project {
  created_at: DateTime!
  description: String
  id: ID!
  name: String!
  owner: User!
  tasks: [Task!]!
  updated_at: DateTime!
}

type Query {
  notifications: [Notification!]!
  project(id: Int!): Project!
  projects: [Project!]!
  task(id: Int!): Task!
  tasks: [Task!]!
}

type Task {
  assignedTo: User
  created_at: DateTime!
  dependencies: [TaskDependency!]!
  description: String!
  due_date: String
  id: ID!
  priority: TaskPriority!
  project: Project!
  status: TaskStatus!
  title: String!
  updated_at: DateTime!
}

type TaskDependency {
  depends_on: Task!
  id: ID!
  task: Task!
}

enum TaskPriority {
  HIGH
  LOW
  MEDIUM
}

enum TaskStatus {
  DONE
  IN_PROGRESS
  TODO
}

input UpdateProjectInput {
  description: String
  name: String
}

input UpdateTaskDto {
  assignedToId: String
  dependsOnIds: [String!]
  description: String
  due_date: String
  priority: String
  projectId: String
  status: String
  title: String
}

type User {
  assignedTasks: [Task!]!
  created_at: DateTime!
  email: String!
  id: ID!
  name: String!
  notifications: [Notification!]!
  ownedProjects: [Project!]!
  role: UserRole!
  updated_at: DateTime!
}

enum UserRole {
  ADMIN
  MANAGER
  MEMBER
}